[build]
  command = "npm run build"
  publish = "dist"
  functions = "netlify/functions"

[functions]
  node_bundler = "esbuild"

# Security and performance headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Content-Security-Policy = "upgrade-insecure-requests"
    X-Robots-Tag = "all"
    # Performance headers
    Cache-Control = "public, max-age=31536000, immutable"

# Noindex for utility endpoints only

[[headers]]
  for = "/.netlify/functions/"
  [headers.values]
    X-Robots-Tag = "noindex"

[[headers]]
  for = "/oauth/"
  [headers.values]
    X-Robots-Tag = "noindex"

# Temporarily noindex blog until ready
[[headers]]
  for = "/blog/"
  [headers.values]
    X-Robots-Tag = "noindex"

# IndexNow key file
[[headers]]
  for = "/indexnow-key.txt"
  [headers.values]
    Content-Type = "text/plain"
    Cache-Control = "public, max-age=86400"

# Static assets caching
[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Force all traffic to HTTPS first
[[redirects]]
  from = "http://*.caloriebot.ai/*"
  to = "https://:splat"
  status = 301
  force = true

# Then force www to non-www
[[redirects]]
  from = "https://www.caloriebot.ai/*"
  to = "https://caloriebot.ai/:splat"
  status = 301
  force = true

# Redirect search URLs to homepage
[[redirects]]
  from = "/search/"
  to = "/"
  status = 301
  force = true

# Handle trailing slashes consistently
[[redirects]]
  from = "/:page"
  to = "/:page/"
  status = 301
  force = true
  conditions = {Path = {match = "^/[^.]+$"}}

# Exclude specific paths from trailing slash redirect
[[redirects]]
  from = "/sitemap.xml"
  to = "/sitemap.xml"
  status = 200
  force = true

[[redirects]]
  from = "/robots.txt"
  to = "/robots.txt"
  status = 200
  force = true

[[redirects]]
  from = "/indexnow-key.txt"
  to = "/indexnow-key.txt"
  status = 200
  force = true

# Custom 404 handling
[[redirects]]
  from = "/*"
  to = "/404/"
  status = 404
  force = false

[build.processing]
  skip_processing = false

[build.processing.html]
  pretty_urls = true

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.images]
  compress = true

[[plugins]]
package = "@netlify/plugin-lighthouse"
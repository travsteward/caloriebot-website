---
// Get code and state from URL
const url = new URL(Astro.request.url);
const code = url.searchParams.get('code');
const state = url.searchParams.get('state'); // This is our session_id

if (!code || !state) {
    return new Response('Missing required parameters', { status: 400 });
}

try {
    // Exchange code for access token
    const tokenResponse = await fetch('https://discord.com/api/oauth2/token', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: new URLSearchParams({
            client_id: import.meta.env.DISCORD_CLIENT_ID,
            client_secret: import.meta.env.DISCORD_CLIENT_SECRET,
            grant_type: 'authorization_code',
            code: code,
            redirect_uri: 'https://caloriebot.ai/oauth/discord/callback'
        })
    });

    const tokenData = await tokenResponse.json();

    // Get user data using the access token
    const userResponse = await fetch('https://discord.com/api/users/@me', {
        headers: {
            Authorization: `Bearer ${tokenData.access_token}`
        }
    });

    const userData = await userResponse.json();

    // Format data for our webhook
    const webhookData = {
        type: 'discord_auth',
        user: {
            id: userData.id,
            username: userData.username,
            email: userData.email
        },
        state: state  // This is our stripe_session_id
    };

    // Send to our API
    const webhookResponse = await fetch('https://caloriebot.ai/api/discord-auth', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${import.meta.env.CALORIEBOT_API_KEY}`
        },
        body: JSON.stringify(webhookData)
    });

    if (!webhookResponse.ok) {
        throw new Error('Failed to send webhook');
    }

    // Redirect to success page with both payment and Discord success
    return Astro.redirect('/success?linked=true');

} catch (error) {
    console.error('OAuth error:', error);
    return new Response('OAuth error', { status: 500 });
}
---

<!-- Add a loading message in case the redirect takes a moment -->
<div>Linking your Discord account...</div>